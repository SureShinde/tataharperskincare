<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     enterprise_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
?>
<?php
/**
 * Template for Mage_Page_Block_Html
 */
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?php echo $this->getLang() ?>" lang="<?php echo $this->getLang() ?>">
<head>
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />

<?php echo $this->getChildHtml('head') ?>
  <script src="http://maps.google.com/maps/api/js?sensor=false"
            type="text/javascript"></script>
    <script type="text/javascript">
    //<![CDATA[
    var map;
    var markers = [];
    var infoWindow;
    var locationSelect;
    var storeListings;

    function load() {
      map = new google.maps.Map(document.getElementById("map"), {
        center: new google.maps.LatLng(40, -100),
        zoom: 4,
        mapTypeId: 'roadmap',
        mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU}
      });
      infoWindow = new google.maps.InfoWindow();

      //locationSelect = document.getElementById("locationSelect");
      storeListings = document.getElementById("storesTable");

      /*locationSelect.onchange = function() {
        var markerNum = locationSelect.options[locationSelect.selectedIndex].value;
        if (markerNum != "none"){
          google.maps.event.trigger(markers[markerNum], 'click');
        }
      };*/
   }

   function searchLocations() {
     var address = document.getElementById("addressInput").value;
     var geocoder = new google.maps.Geocoder();
     geocoder.geocode({address: address}, function(results, status) {
       if (status == google.maps.GeocoderStatus.OK) {
        searchLocationsNear(results[0].geometry.location);
       } else {
         alert(address + ' not found');
       }
     });
   }

   function clearLocations() {
     infoWindow.close();
     for (var i = 0; i < markers.length; i++) {
       markers[i].setMap(null);
     }
     markers.length = 0;

     //locationSelect.innerHTML = "";
     storeListings.innerHTML = "";

     jQuery("#inputText").hide();

     /*
     var option = document.createElement("option");
     option.value = "none";
     option.innerHTML = "See all results:";
     locationSelect.appendChild(option);
     */
   }

   function searchLocationsNear(center) {
     clearLocations(); 
     var radius = document.getElementById('radiusSelect').value;
     var searchUrl = '/storelocator/phpsqlsearch_genxml.php?lat=' + center.lat() + '&lng=' + center.lng() + '&radius=' + radius;
     downloadUrl(searchUrl, function(data) {
       var xml = parseXml(data);
       var markerNodes = xml.documentElement.getElementsByTagName("marker");
       if (markerNodes.length > 0)
       {
           var bounds = new google.maps.LatLngBounds();
           for (var i = 0; i < markerNodes.length; i++) {
             var name = markerNodes[i].getAttribute("name");
             var address = markerNodes[i].getAttribute("address");
             var distance = parseFloat(markerNodes[i].getAttribute("distance"));
             var city = markerNodes[i].getAttribute("city");
             var state = markerNodes[i].getAttribute("state");
             var zip = markerNodes[i].getAttribute("zip");
             var phone = markerNodes[i].getAttribute("phone");
             var latlng = new google.maps.LatLng(
                  parseFloat(markerNodes[i].getAttribute("lat")),
                  parseFloat(markerNodes[i].getAttribute("lng")));

             //createOption(name, distance, i);
             displayStores(name, distance, i, address, city, state, zip, phone);
             createMarker(latlng, name, address, city, state, zip, phone);
             bounds.extend(latlng);
           }
           map.fitBounds(bounds);
       }
       else
       {
          alert('Sorry, there are no stores that close to your location. Try expanding your search radius.');
       }
       //locationSelect.style.visibility = "visible";
       /*locationSelect.onchange = function() {
         var markerNum = locationSelect.options[locationSelect.selectedIndex].value;
         google.maps.event.trigger(markers[markerNum], 'click');
       };*/
      });
    }
  
    function createMarker(latlng, name, address, city, state, zip, phone) {
      var html = "<b>" + name + "</b> <br/>" + address + "<br />" + city + ", " + state + " " +  zip + "<br />" + phone + "<br />";
      html = html + "<a class='dir-marker-link' href='http://maps.google.com/maps?daddr=" + encodeURIComponent(address + "," + city + "," + " " + zip) + "' target='_blank'>" + "Link to Directions" + "</a>";
      var marker = new google.maps.Marker({
        map: map,
        position: latlng
      });
      google.maps.event.addListener(marker, 'click', function() {
        infoWindow.setContent(html);
        infoWindow.open(map, marker);
      });
      markers.push(marker);
    }

    function createOption(name, distance, num) {
      var option = document.createElement("option");
      option.innerHTML = name + "<br />" + "(" + distance.toFixed(1) + ")";
      //locationSelect.appendChild(option);
    }

    function displayStores(name, distance, num, address, city, state, zip, phone) {
      var newRow = document.createElement("tr");
      var nameTd = document.createElement("td");
      var addressTd = document.createElement("td");
      var directionsTd = document.createElement("td");

      nameTd.innerHTML = name + "<br />" + "<span class='not-blue'>(" + distance.toFixed(1) + " miles)</span>";
      addressTd.innerHTML = address + "<br />" + city + ", " + state + " " + zip + "<br />" + phone;
      directionsTd.innerHTML = "<a href='http://maps.google.com/maps?daddr=" + encodeURIComponent(address + "," + city + "," + " " + zip) + "' target='_blank'>" + "Link to Directions" + "</a>";

      newRow.appendChild(nameTd);
      newRow.appendChild(addressTd);
      newRow.appendChild(directionsTd);
      newRow['id'] = num;
      newRow.onclick = function() { 
        replyClick(this.id);
      };

      storeListings.appendChild(newRow);
    }

    function replyClick(markerid) {
      //alert(id);
      google.maps.event.trigger(markers[markerid], 'click');

      jQuery('html, body').animate({
         scrollTop: jQuery("#map").offset().top
     }, 500);
    }

    function downloadUrl(url, callback) {
      var request = window.ActiveXObject ?
          new ActiveXObject('Microsoft.XMLHTTP') :
          new XMLHttpRequest;

      request.onreadystatechange = function() {
        if (request.readyState == 4) {
          request.onreadystatechange = doNothing;
          callback(request.responseText, request.status);
        }
      };

      request.open('GET', url, true);
      request.send(null);
    }

    function parseXml(str) {
      if (window.ActiveXObject) {
        var doc = new ActiveXObject('Microsoft.XMLDOM');
        doc.loadXML(str);
        return doc;
      } else if (window.DOMParser) {
        return (new DOMParser).parseFromString(str, 'text/xml');
      }
    }

    function doNothing() {}

    //]]>
  </script>
</head>
<body onload="load()" <?php echo $this->getBodyClass()?' class="'.$this->getBodyClass().'"':'' ?>>
  <!--ewpagecache-no-cache-->
<?php echo $this->getChildHtml('after_body_start') ?>
<div class="wrapper">
     <?php
        echo $this->getChildHtml('displaycustomfields');
        $fieldsObj = new Display_Custom_Fields();
        $customfields = $fieldsObj->getCustomFields();
    ?>
    <?php echo $this->getChildHtml('global_notices') ?>
    <?php echo $this->getChildHtml('header') ?>
    <?php echo $this->getChildHtml('global_messages') ?>
    <div class="page">
        <div class="header-custom">
        <img src="http://tataharperskincare.com/skin/frontend/enterprise/tatamobile/images/header_storeloc_main.jpg" />
        </div>
        <?php echo $this->getChildHtml('breadcrumbsContainer') ?>
        <div class="main col1-layout">
            <div class="col-main">
              <h2 class="locatepadding green">Our products are carried in select beauty boutiques, premier department stores and luxury spas across the United States and Canada! Find your nearest Tata Harper retailer by entering your address or zip code below.</h2>
                <?php echo $this->getChildHtml('storelocator') ?>
            </div>
        </div>
    </div>
</div>
        <?php echo $this->getChildHtml('footer_before') ?>
        <?php echo $this->getChildHtml('footer') ?>
        <?php echo $this->getChildHtml('before_body_end') ?>
        <?php echo $this->getAbsoluteFooter() ?>
</body>
</html>